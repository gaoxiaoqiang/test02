<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>tst-shop</display-name>
  <description>配置ssm</description>
  
  
      <context-param> <!--全局范围内环境参数初始化-->  
        <param-name>contextConfigLocation</param-name>          <!--参数名称-->  
        <param-value>classpath:applicationContext.xml</param-value>     <!--参数取值-->  
    </context-param> 
    <!--以下配置的加载顺序:先 ServletContext >> context-param >> listener >> filter >> servlet >>  spring-->   

   <listener>        <!--用来设定Listener接口-->  
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class><!--定义Listener的类名称-->  
    </listener>  
<filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>


  <servlet>     <!--用来声明一个servlet的数据 -->    
        <servlet-name>SpringMVC</servlet-name>  <!--指定servlet的名称-->  
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class> <!--指定servlet的类名称,这里配置了前端控制器-->  
        <init-param><!--用来定义参数,可有多个init-param。在servlet类中通过getInitParamenter(String name)方法访问初始化参数    -->  
            <param-name>contextConfigLocation</param-name>  <!--参数名称-->  
            <param-value>classpath:spring-mvc.xml</param-value> <!--参数值-->  
        </init-param>  
        <load-on-startup>1</load-on-startup><!--当值为正数或零时：Servlet容器先加载数值小的servlet，再依次加载其他数值大的servlet.-->  
    </servlet>  
    <servlet-mapping><!--用来定义servlet所对应的URL-->  
        <servlet-name>SpringMVC</servlet-name>  <!--指定servlet的名称-->  
        <url-pattern>/</url-pattern>        <!--指定servlet所对应的URL-->  
    </servlet-mapping>  



<!--如果某个会话在一定时间未被访问，则服务器可以扔掉以节约内存-->
   <session-config>  
        <session-timeout>120</session-timeout>  
    </session-config> 
  
  
  <welcome-file-list>
    <welcome-file>/index.html</welcome-file>
  </welcome-file-list>
</web-app>